使用一個名為 web 的單一網絡，其中處理 HTTP 流量（包括 Traefik）的所有容器
root@vmi1476380:~# docker network create web
2e690255900183ea776b0f3207d880bbde9a3ab02872cb3a1cf0bff53909c345
root@vmi1476380:~#

建立一個目錄，我們將在其中配置 Traefik 的其餘部分
root@vmi1476380:~# mkdir -p /opt/traefik
root@vmi1476380:~#

在此目錄中，我們將建立 3 個空檔
root@vmi1476380:~# touch /opt/traefik/docker-compose.yml
root@vmi1476380:~# touch /opt/traefik/acme.json && chmod 600 /opt/traefik/acme.json
root@vmi1476380:~# touch /opt/traefik/traefik.toml

docker-compose.yml 檔案將為我們提供一種簡單、一致且更重要的是確定性的建立 Traefik 的方式。 文件內容如下：
root@vmi1476380:~# vim /opt/traefik/docker-compose.yml


version: '2'

services:
  traefik:
    image: traefik:<stable v1.7 from https://hub.docker.com/_/traefik>
    restart: always
    ports:
      - 80:80
      - 443:443
    networks:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/traefik/traefik.toml:/traefik.toml
      - /opt/traefik/acme.json:/acme.json
    container_name: traefik

networks:
  web:
    external: true


如您所見，我們正在容器中安裝 traefik.toml 檔案以及（空）acme.json 檔案。
我們還在容器中安裝了 /var/run/docker.sock Docker 套接字，因此 Traefik 可以監聽 Docker 事件並在建立（或關閉）容器時重新配置自己的內部配置。
此外，我們還確保在出現問題時（或：如果伺服器重新啟動），Docker 引擎會自動重新啟動容器。我們在主機上發布預設 HTTP 連接埠 80 和 443
確保容器放置在我們之前創建的網路中
我們給這個容器一個名為 traefik 的靜態名稱

traefik.toml配置
root@vmi1476380:~# vim /opt/traefik/traefik.toml


debug = false

logLevel = "ERROR"
defaultEntryPoints = ["https","http"]

[entryPoints]
  [entryPoints.http]
  address = ":80"
    [entryPoints.http.redirect]
    entryPoint = "https"
  [entryPoints.https]
  address = ":443"
  [entryPoints.https.tls]

[retry]

[docker]
endpoint = "unix:///var/run/docker.sock"
domain = "my-awesome-app.org"
watch = true
exposedByDefault = false

[acme]
email = "your-email-here@my-awesome-app.org"
storage = "acme.json"
entryPoint = "https"
onHostRule = true
[acme.httpChallenge]
entryPoint = "http"

使用 Let's Encrypt 啟用 SSL 憑證的自動請求和設定。這些憑證將儲存在 acme.json 檔案中，您可以自行備份並儲存在異地。

讓我們啟動容器。從/opt/traefik目錄中運行docker-compose up -d它將創建並啟動 Traefik 容器。
root@vmi1476380:~# cd /opt/traefik/
root@vmi1476380:/opt/traefik# ls -l
total 8
-rw------- 1 root root   0 Jan  2 06:11 acme.json
-rw-r--r-- 1 root root 411 Jan  2 06:14 docker-compose.yml
-rw-r--r-- 1 root root 533 Jan  2 06:24 traefik.toml
root@vmi1476380:/opt/traefik#

遇到問題,先檢查docker-compose.yml
root@vmi1476380:/opt/traefik# docker-compose up -d
ERROR: invalid reference format
root@vmi1476380:/opt/traefik#

访问 Docker Hub：访问 Traefik on Docker Hub 查找稳定版 v1.7 的具体标签

https://hub.docker.com/_/traefik












